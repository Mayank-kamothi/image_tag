<?php

/**
 * @file
 * Installation file for the Image tag module.
 */


/**
 * Implement hook_init().
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */

function image_tag_init() {
  drupal_add_js(drupal_get_path('module', 'image_tag') . '/js/image_tag.js');
  drupal_add_css(drupal_get_path('module', 'image_tag') . '/css/jquery.tag.css');
  drupal_add_css(drupal_get_path('module', 'image_tag') . '/css/jquery-ui.custom.css');
  drupal_add_js(drupal_get_path('module', 'image_tag') . '/js/jquery.tag.js');
  drupal_add_js('https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.7/jquery-ui.min.js', 'external');
}

/**
 * Implement hook_menu().
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */

function image_tag_menu() {
  $items['image_tag'] = array(
  'title' => 'image_tag',
  'page callback' => 'image_tag_save',
  'access arguments' => array('access content'),
  'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implement for image tag different action.
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */

function image_tag_save() {
  $imageData = image_tag_image_nodeId_fid($_REQUEST['imageName']);
  $nid = $imageData['id'];
  $fid = $imageData['fid'];
  switch ($_REQUEST['action']) {
    case 'list':
        $tags = array();
        $query = db_select('image_tag', 'it');
        $query->fields('it'); // SELECT the fields from file_usage
        $query->condition('it.tag_nid', $nid, '=');
        $query->condition('it.tag_fid', $fid, '=');
        $result = $query->execute();
        // Display all tag on image.
        // Loop through all fields searching for image tag and display.
        while ($record = $result->fetchAssoc()) {
            $tags[] = array("id" => $record['tag_id'],
                        "label" => t($record['tag_label']),
                        "width" => $record['tag_width'],
                        "height" => $record['tag_height'],
                        "top" => $record['tag_top'],
                        "left" => $record['tag_left']);
        }
        echo json_encode($tags);
      break;
      case 'delete':
        // Delete tag on image.
        $num_deleted = db_delete('image_tag')
            ->condition('tag_id', $_REQUEST['id'])
            ->execute();
      break;
      case 'save':
      // Save tag on image.
    $nid = db_insert('image_tag')
    ->fields(array(
      'tag_width' => $_REQUEST['width'],
      'tag_height' => $_REQUEST['height'],
      'tag_top' => $_REQUEST['top'],
      'tag_left' => $_REQUEST['left'],
      'tag_nid' => $nid,
      'tag_fid' => $fid,
      'tag_label' => $_REQUEST['label'],
    ))
    ->execute();
      break;
  }
}

/**
 * Implement for get image node and file id.
 * @param $file_name
 *   The Drupal file name of the original image.
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */
function image_tag_image_nodeId_fid($file_name) {
  $query = db_select('file_managed', 'fm');
  $query->join('file_usage', 'fu', 'fu.fid = fm.fid'); // JOIN users with file_usage
  $query->fields('fu', array('fid', 'id')); // SELECT the fields from file_usage
  $query->condition('fm.uri', 'public://' . $file_name, '='); // WHERE file name wildcard
  $result = $query->execute();
  $record = $result->fetchAssoc();
  return $record;
}
