<?php

/**
 * @file
 * Installation file for the Image tag module.
 */


/**
 * Implement hook_init().
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */

function image_tag_init() {
  drupal_add_js(drupal_get_path('module', 'image_tag') . '/js/jquery.autocomplete.js');
  drupal_add_js(drupal_get_path('module', 'image_tag') . '/js/image_tag.js');
  drupal_add_css(drupal_get_path('module', 'image_tag') . '/css/jquery.tag.css');
  drupal_add_css(drupal_get_path('module', 'image_tag') . '/css/jquery-ui.custom.css');
  if (user_access('access image_tag')) {
    $permission_variable = array('user_permission' => 'true');
    drupal_add_js(array('image_tag' => $permission_variable), 'setting');
  }
  drupal_add_js(drupal_get_path('module', 'image_tag') . '/js/jquery.tag.js');
  drupal_add_js('https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.7/jquery-ui.min.js', 'external');
}

/**
 * Implement hook_menu().
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */

function image_tag_menu() {
  $items['image_tag'] = array(
  'title' => 'image_tag',
  'page callback' => 'image_tag_save',
  'access arguments' => array('access image_tag'),
  'type' => MENU_CALLBACK,
  );
  $items['image_tag_all'] = array(
  'title' => 'image_tag_all',
  'page callback' => 'image_tag_all',
  'access arguments' => array('access content'),
  'type' => MENU_CALLBACK,
  );
  $items['all_users'] = array(
  'title' => 'image_tag_users_all',
  'page callback' => 'image_tag_users_all',
  'access arguments' => array('access content'),
  'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function image_tag_permission() {
  return array(
    'access image_tag' => array(
      'title' => t('access image_tag'),
    ),
  );
}

/**
 * Implement for image tag list action.
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */
function image_tag_all() {
  global $user;
  $imageData = image_tag_image_nodeId_fid($_REQUEST['imageName']);
  $nid = $imageData['id'];
  $fid = $imageData['fid'];

  if (user_access('access image_tag')) {
    $permission_variable = 'true';
  }

  if ($_REQUEST['action'] == 'list') {
    $tags = array();

    $args = array('user' => $user->uid, 'approved' => TRUE);

    $options = array(
      'include_user_info' => TRUE,
      'paging' => variable_get('user_relationships_relationships_per_page', 16),
    );

    $relationships = user_relationships_load($args, $options);
    $user_friend[] = $user->uid;
    foreach($relationships as $keys => $values) {
      $user_friend[] = $values->requestee->uid;
    }
    //print_r($user_friend);
    $query = db_select('image_tag', 'it');
      $query->fields('it'); // SELECT the fields from file_usage
      $query->condition('it.tag_nid', $nid, '=');
      $query->condition('it.tag_fid', $fid, '=');
      $result = $query->execute();

      // Display all tag on image.
      // Loop through all fields searching for image tag and display.
      $j = 0;
      while ($record = $result->fetchAssoc()) {
          $tags[] = array("id" => $record['tag_id'],
                      "label" => t($record['tag_label']),
                      "width" => $record['tag_width'],
                      "height" => $record['tag_height'],
                      "top" => $record['tag_top'],
                      "left" => $record['tag_left'],
                      "tag_user_id" => $record['taged_user_id']);
          if (in_array($record['tag_user_id'], $user_friend)) {
              $tags[$j]['permission'] = 'true';
          }
          else {
            $tags[$j]['permission'] = 'false';
          }
      $j+=1;
      }

    echo json_encode($tags);
  }
}

/**
 * Implement for image tag different action.
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */
function image_tag_save() {
  global $user;
  $imageData = image_tag_image_nodeId_fid($_REQUEST['imageName']);
  $nid = $imageData['id'];
  $fid = $imageData['fid'];
  if ($_REQUEST['action'] == 'delete') {
    // Delete tag on image.
    $num_deleted = db_delete('image_tag')
        ->condition('tag_id', $_REQUEST['id'])
        ->condition('tag_id', $_REQUEST['id'])
        ->execute();
  }
  else {
    // Save tag on image.
    $nid = db_insert('image_tag')
    ->fields(array(
      'tag_user_id' => $user->uid,
      'tag_width' => $_REQUEST['width'],
      'tag_height' => $_REQUEST['height'],
      'tag_top' => $_REQUEST['top'],
      'tag_left' => $_REQUEST['left'],
      'tag_nid' => $nid,
      'tag_fid' => $fid,
      'tag_label' => $_REQUEST['label'],
      'taged_user_id' => $_REQUEST['taged_user_id'],
    ))
    ->execute();
  }
}

/**
 * Implement for image tag list action.
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */
function image_tag_users_all() {
    global $user;
  //$tags = array();

  $args = array('user' => $user->uid, 'approved' => TRUE);

  $options = array(
    'include_user_info' => TRUE,
    'paging' => variable_get('user_relationships_relationships_per_page', 16),
  );

  $relationships = user_relationships_load($args, $options);
  foreach($relationships as $keys => $values) {
    $tags[] = array(
                'value' => $values->requestee->name,
                'label' => $values->requestee->name,
                'uid' => $values->requestee->uid
                );
  }

  echo json_encode($tags);
}

/**
 * Implement for get image node and file id.
 * @param $file_name
 *   The Drupal file name of the original image.
 * @author Mayank-kamothi <mayank_it@yahoo.com>
 */
function image_tag_image_nodeId_fid($file_name) {
  $query = db_select('file_managed', 'fm');
  $query->join('file_usage', 'fu', 'fu.fid = fm.fid'); // JOIN users with file_usage
  $query->fields('fu', array('fid', 'id')); // SELECT the fields from file_usage
  $query->condition('fm.uri', 'public://' . $file_name, '='); // WHERE file name wildcard
  $result = $query->execute();
  $record = $result->fetchAssoc();
  return $record;
}
